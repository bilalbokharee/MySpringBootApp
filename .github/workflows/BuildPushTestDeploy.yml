name: Build

on:
  workflow_call:
      inputs:

        ecr_repo:
          description: Name of ECR repo to push & pull image from
          required: true
          type: string

        eks_cluster_name:
          description: EKS cluster name to deploy to.
          required: true
          type: string

        develop_mode:
          description: When set to true, tests are not run.
          required: true
          type: boolean

        deploy:
          description: When set to false, EKS deployment is not done
          required: true
          type: boolean

jobs:

  buildjavaapp:
    name: Build Spring boot application
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: MVN build jar
        run: |
          ./mvnw clean package

      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: myspringbootapp
          path: target/myspringbootapp-1.0.0.jar

  buildimagenpush:
    name: Build Docker Image
    needs: buildjavaapp
    runs-on: ubuntu-latest

    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.GH_ACTIONS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.GH_ACTIONS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.GH_ACTIONS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: myspringbootapp
          path: target/

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t $ECR_REGISTRY/${{ inputs.ecr_repo }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ inputs.ecr_repo }}:$IMAGE_TAG

  test:
    if: ${{ inputs.develop_mode == false }}
    name: CI tests
    runs-on: ubuntu-latest

    steps:

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ inputs.eks_cluster_name }} --region $AWS_REGION

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
          kubectl apply -f manifests/hello-app-deployment.yaml
          kubectl apply -f manifests/hello-app-service.yaml